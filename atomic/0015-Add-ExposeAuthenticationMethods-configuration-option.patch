From f41de866412afc9fe0f2c44cd992d06412ffcf5e Mon Sep 17 00:00:00 2001
From: Vincent Brillault <vincent.brillault@cern.ch>
Date: Mon, 2 May 2016 16:34:01 +0200
Subject: [PATCH 15/17] Add ExposeAuthenticationMethods configuration option

---
 auth-pam.c    |  3 ++-
 servconf.c    | 20 ++++++++++++++++++++
 servconf.h    |  6 ++++++
 session.c     |  9 ++++++++-
 sshd_config.5 | 15 +++++++++++++++
 5 files changed, 51 insertions(+), 2 deletions(-)

diff --git a/auth-pam.c b/auth-pam.c
index fd8bde1..c1dbf0b 100644
--- a/auth-pam.c
+++ b/auth-pam.c
@@ -694,7 +694,8 @@ sshpam_init_ctx(Authctxt *authctxt)
 	}
 
 	/* Notify PAM about any already successful auth methods */
-	if (authctxt->auth_details)
+	if (options.expose_auth_methods >= EXPOSE_AUTHMETH_PAMONLY &&
+			authctxt->auth_details)
 		do_pam_putenv("SSH_USER_AUTH", authctxt->auth_details);
 
 	ctxt = xcalloc(1, sizeof *ctxt);
diff --git a/servconf.c b/servconf.c
index 17b8a2f..5ec0808 100644
--- a/servconf.c
+++ b/servconf.c
@@ -161,6 +161,7 @@ initialize_server_options(ServerOptions *options)
 	options->version_addendum = NULL;
 	options->use_kuserok = -1;
 	options->enable_k5users = -1;
+	options->expose_auth_methods = -1;
 }
 
 void
@@ -336,6 +337,8 @@ fill_default_server_options(ServerOptions *options)
 	}
 #endif
 
+	if (options->expose_auth_methods == -1)
+		options->expose_auth_methods = EXPOSE_AUTHMETH_PAMONLY;
 }
 
 /* Keyword tokens. */
@@ -372,6 +375,7 @@ typedef enum {
 	sKexAlgorithms, sIPQoS, sVersionAddendum,
 	sAuthorizedKeysCommand, sAuthorizedKeysCommandUser,
 	sAuthenticationMethods, sHostKeyAgent,
+	sExposeAuthenticationMethods,
 	sDeprecated, sUnsupported
 } ServerOpCodes;
 
@@ -515,6 +519,7 @@ static struct {
 	{ "authorizedkeyscommanduser", sAuthorizedKeysCommandUser, SSHCFG_ALL },
 	{ "versionaddendum", sVersionAddendum, SSHCFG_GLOBAL },
 	{ "authenticationmethods", sAuthenticationMethods, SSHCFG_ALL },
+	{ "exposeauthenticationmethods", sExposeAuthenticationMethods, SSHCFG_GLOBAL },
 	{ NULL, sBadOption, 0 }
 };
 
@@ -861,6 +866,12 @@ static const struct multistate multistate_tcpfwd[] = {
 	{ "local",			FORWARD_LOCAL },
 	{ NULL, -1 }
 };
+static const struct multistate multistate_exposeauthmeth[] = {
+	{ "never",                      EXPOSE_AUTHMETH_NEVER },
+	{ "pam-only",                   EXPOSE_AUTHMETH_PAMONLY },
+	{ "pam-and-env",                EXPOSE_AUTHMETH_PAMENV },
+	{ NULL, -1}
+};
 
 int
 process_server_config_line(ServerOptions *options, char *line,
@@ -1700,6 +1711,11 @@ process_server_config_line(ServerOptions *options, char *line,
 		}
 		return 0;
 
+	case sExposeAuthenticationMethods:
+		intptr = &options->expose_auth_methods;
+		multistate_ptr = multistate_exposeauthmeth;
+		goto parse_multistate;
+
 	case sDeprecated:
 		logit("%s line %d: Deprecated option %s",
 		    filename, linenum, arg);
@@ -1856,6 +1872,7 @@ copy_set_server_options(ServerOptions *dst, ServerOptions *src, int preauth)
 	M_CP_INTOPT(enable_k5users);
 	M_CP_INTOPT(rekey_limit);
 	M_CP_INTOPT(rekey_interval);
+	M_CP_INTOPT(expose_auth_methods);
 
 	/* M_CP_STROPT and M_CP_STRARRAYOPT should not appear before here */
 #define M_CP_STROPT(n) do {\
@@ -1944,6 +1961,8 @@ fmt_intarg(ServerOpCodes code, int val)
 		return fmt_multistate_int(val, multistate_privsep);
 	case sAllowTcpForwarding:
 		return fmt_multistate_int(val, multistate_tcpfwd);
+	case sExposeAuthenticationMethods:
+		return fmt_multistate_int(val, multistate_exposeauthmeth);
 	case sProtocol:
 		switch (val) {
 		case SSH_PROTO_1:
@@ -2113,6 +2132,7 @@ dump_config(ServerOptions *o)
 	dump_cfg_fmtint(sUsePrivilegeSeparation, use_privsep);
 	dump_cfg_fmtint(sKerberosUseKuserok, o->use_kuserok);
 	dump_cfg_fmtint(sGssEnablek5users, o->enable_k5users);
+	dump_cfg_fmtint(sExposeAuthenticationMethods, o->expose_auth_methods);
 
 	/* string arguments */
 	dump_cfg_string(sPidFile, o->pid_file);
diff --git a/servconf.h b/servconf.h
index ae4fef4..8930325 100644
--- a/servconf.h
+++ b/servconf.h
@@ -48,6 +48,11 @@
 #define FORWARD_LOCAL		(1<<1)
 #define FORWARD_ALLOW		(FORWARD_REMOTE|FORWARD_LOCAL)
 
+/* Expose AuthenticationMethods */
+#define EXPOSE_AUTHMETH_NEVER   0
+#define EXPOSE_AUTHMETH_PAMONLY 1
+#define EXPOSE_AUTHMETH_PAMENV  2
+
 #define DEFAULT_AUTH_FAIL_MAX	6	/* Default for MaxAuthTries */
 #define DEFAULT_SESSIONS_MAX	10	/* Default for MaxSessions */
 
@@ -190,6 +195,7 @@ typedef struct {
 
 	u_int	num_auth_methods;
 	char   *auth_methods[MAX_AUTH_METHODS];
+	int	expose_auth_methods; /* EXPOSE_AUTHMETH_* above */
 }       ServerOptions;
 
 /* Information about the incoming connection as used by Match */
diff --git a/session.c b/session.c
index 1c4c86e..6ffc827 100644
--- a/session.c
+++ b/session.c
@@ -1208,6 +1208,12 @@ copy_environment(char **source, char ***env, u_int *envsize)
 		}
 		*var_val++ = '\0';
 
+		if (options.expose_auth_methods < EXPOSE_AUTHMETH_PAMENV &&
+				strcmp(var_name, "SSH_USER_AUTH") == 0) {
+			free(var_name);
+			continue;
+		}
+
 		debug3("Copy environment: %s=%s", var_name, var_val);
 		child_set_env(env, envsize, var_name, var_val);
 
@@ -1387,7 +1393,8 @@ do_setup_env(Session *s, const char *shell)
 	}
 #endif /* USE_PAM */
 
-	if (s->authctxt->auth_details)
+	if (options.expose_auth_methods >= EXPOSE_AUTHMETH_PAMENV &&
+			s->authctxt->auth_details)
 		child_set_env(&env, &envsize, "SSH_USER_AUTH",
 		     s->authctxt->auth_details);
 
diff --git a/sshd_config.5 b/sshd_config.5
index bb7e94d..0a5eb24 100644
--- a/sshd_config.5
+++ b/sshd_config.5
@@ -461,6 +461,21 @@ is allowed to log in.
 See PATTERNS in
 .Xr ssh_config 5
 for more information on patterns.
+.It Cm ExposeAuthenticationMethods
+When using SSH2, this option controls the exposure of the list of
+successful authentication methods to PAM during the authentication
+and to the shell environment via the
+.Cm SSH_USER_AUTH
+variable. See the description of this variable for more details.
+Valid options are:
+.Dq never
+(Do not expose successful authentication methods),
+.Dq pam-only
+(Only expose them to PAM during authentication, not afterwards),
+.Dq pam-and-env
+(Expose them to PAM and keep them in the shell environment).
+The default is
+.Dq pam-only .
 .It Cm ForceCommand
 Forces the execution of the command specified by
 .Cm ForceCommand ,
-- 
2.9.0

