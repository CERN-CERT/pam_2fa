From ba0c2144c44cefb4f6cdccf86dfe0d297cd586d8 Mon Sep 17 00:00:00 2001
From: Vincent Brillault <vincent.brillault@cern.ch>
Date: Tue, 23 Feb 2016 15:55:37 +0100
Subject: [PATCH 10/17] Move pubkey_format@auth.h to
 sshkey_format_oneline@ssh.h

---
 auth.h            |  1 -
 auth2-hostbased.c |  2 +-
 auth2-pubkey.c    | 25 ++-----------------------
 key.c             | 21 +++++++++++++++++++++
 key.h             |  1 +
 5 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/auth.h b/auth.h
index 3cf859c..6c31f33 100644
--- a/auth.h
+++ b/auth.h
@@ -127,7 +127,6 @@ int	 auth_rsa_key_allowed(struct passwd *, BIGNUM *, Key **);
 int	 auth_rhosts_rsa_key_allowed(struct passwd *, char *, char *, Key *);
 int	 hostbased_key_allowed(struct passwd *, const char *, char *, Key *);
 int	 user_key_allowed(struct passwd *, Key *);
-char	*pubkey_format(const Key *key);
 void	 pubkey_auth_info(Authctxt *, const Key *, const char *, ...)
 	    __attribute__((__format__ (printf, 3, 4)));
 
diff --git a/auth2-hostbased.c b/auth2-hostbased.c
index 33711b0..7a115c8 100644
--- a/auth2-hostbased.c
+++ b/auth2-hostbased.c
@@ -131,7 +131,7 @@ userauth_hostbased(Authctxt *authctxt)
 	buffer_dump(&b);
 #endif
 
-	pubkey = pubkey_format(key);
+	pubkey = key_format_oneline(key);
 	auth_info(authctxt,
 	    "%s, client user \"%.100s\", client host \"%.100s\"",
 	    pubkey, cuser, chost);
diff --git a/auth2-pubkey.c b/auth2-pubkey.c
index dc31322..fded8e0 100644
--- a/auth2-pubkey.c
+++ b/auth2-pubkey.c
@@ -155,7 +155,7 @@ userauth_pubkey(Authctxt *authctxt)
 #ifdef DEBUG_PK
 		buffer_dump(&b);
 #endif
-		pubkey = pubkey_format(key);
+		pubkey = key_format_oneline(key);
 		auth_info(authctxt, "%s", pubkey);
 
 		/* test for correct signature */
@@ -202,27 +202,6 @@ done:
 	return authenticated;
 }
 
-char *
-pubkey_format(const Key *key)
-{
-	char *fp, *result;
-
-	if (key_is_cert(key)) {
-		fp = key_selected_fingerprint(key->cert->signature_key, SSH_FP_HEX);
-		xasprintf(&result, "%s ID %s (serial %llu) CA %s %s",
-		    key_type(key), key->cert->key_id,
-		    (unsigned long long)key->cert->serial,
-		    key_type(key->cert->signature_key), fp);
-		free(fp);
-	} else {
-		fp = key_selected_fingerprint(key, SSH_FP_HEX);
-		xasprintf(&result, "%s %s", key_type(key), fp);
-		free(fp);
-	}
-
-	return result;
-}
-
 void
 pubkey_auth_info(Authctxt *authctxt, const Key *key, const char *fmt, ...)
 {
@@ -239,7 +218,7 @@ pubkey_auth_info(Authctxt *authctxt, const Key *key, const char *fmt, ...)
 			fatal("%s: vasprintf failed", __func__);
 	}
 
-	pubkey = pubkey_format(key);
+	pubkey = key_format_oneline(key);
 	auth_info(authctxt, "%s%s%s", pubkey, extra == NULL ? "" : ", ",
 	    extra == NULL ? "" : extra);
 	free(pubkey);
diff --git a/key.c b/key.c
index 6487d81..5752471 100644
--- a/key.c
+++ b/key.c
@@ -2689,3 +2689,24 @@ key_private_deserialize(Buffer *blob)
 	}
 	return k;
 }
+
+char *
+key_format_oneline(const Key *key)
+{
+	char *fp, *result;
+
+	if (key_is_cert(key)) {
+		fp = key_selected_fingerprint(key->cert->signature_key, SSH_FP_HEX);
+		xasprintf(&result, "%s ID %s (serial %llu) CA %s %s",
+		    key_type(key), key->cert->key_id,
+		    (unsigned long long)key->cert->serial,
+		    key_type(key->cert->signature_key), fp);
+		free(fp);
+	} else {
+		fp = key_selected_fingerprint(key, SSH_FP_HEX);
+		xasprintf(&result, "%s %s", key_type(key), fp);
+		free(fp);
+	}
+
+	return result;
+}
diff --git a/key.h b/key.h
index 8f61605..72b3876 100644
--- a/key.h
+++ b/key.h
@@ -108,6 +108,7 @@ u_char		*key_fingerprint_raw(const Key *, enum fp_type, u_int *);
 enum fp_type	 key_fingerprint_selection(void);
 char		*key_selected_fingerprint(Key *, enum fp_rep);
 char		*key_fingerprint_prefix(void);
+char		*key_format_oneline(const Key *key);
 const char	*key_type(const Key *);
 const char	*key_cert_type(const Key *);
 int		 key_write(const Key *, FILE *);
-- 
2.9.0

