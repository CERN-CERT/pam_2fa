From 61ee931435a34f7847c5c3fe135e3f1bd10b3bfa Mon Sep 17 00:00:00 2001
From: Vincent Brillault <git@lerya.net>
Date: Wed, 18 Nov 2015 21:11:07 +0100
Subject: [PATCH 04/17] Extract pubkey_format from pubkey_auth_info

---
 auth.h         |  1 +
 auth2-pubkey.c | 43 +++++++++++++++++++++++++++----------------
 2 files changed, 28 insertions(+), 16 deletions(-)

diff --git a/auth.h b/auth.h
index 6c31f33..3cf859c 100644
--- a/auth.h
+++ b/auth.h
@@ -127,6 +127,7 @@ int	 auth_rsa_key_allowed(struct passwd *, BIGNUM *, Key **);
 int	 auth_rhosts_rsa_key_allowed(struct passwd *, char *, char *, Key *);
 int	 hostbased_key_allowed(struct passwd *, const char *, char *, Key *);
 int	 user_key_allowed(struct passwd *, Key *);
+char	*pubkey_format(const Key *key);
 void	 pubkey_auth_info(Authctxt *, const Key *, const char *, ...)
 	    __attribute__((__format__ (printf, 3, 4)));
 
diff --git a/auth2-pubkey.c b/auth2-pubkey.c
index 3808ec8..759c26b 100644
--- a/auth2-pubkey.c
+++ b/auth2-pubkey.c
@@ -197,10 +197,31 @@ done:
 	return authenticated;
 }
 
+char *
+pubkey_format(const Key *key)
+{
+	char *fp, *result;
+
+	if (key_is_cert(key)) {
+		fp = key_selected_fingerprint(key->cert->signature_key, SSH_FP_HEX);
+		xasprintf(&result, "%s ID %s (serial %llu) CA %s %s",
+		    key_type(key), key->cert->key_id,
+		    (unsigned long long)key->cert->serial,
+		    key_type(key->cert->signature_key), fp);
+		free(fp);
+	} else {
+		fp = key_selected_fingerprint(key, SSH_FP_HEX);
+		xasprintf(&result, "%s %s", key_type(key), fp);
+		free(fp);
+	}
+
+	return result;
+}
+
 void
 pubkey_auth_info(Authctxt *authctxt, const Key *key, const char *fmt, ...)
 {
-	char *fp, *extra;
+	char *extra, *pubkey;
 	va_list ap;
 	int i;
 
@@ -210,23 +231,13 @@ pubkey_auth_info(Authctxt *authctxt, const Key *key, const char *fmt, ...)
 		i = vasprintf(&extra, fmt, ap);
 		va_end(ap);
 		if (i < 0 || extra == NULL)
-			fatal("%s: vasprintf failed", __func__);	
+			fatal("%s: vasprintf failed", __func__);
 	}
 
-	if (key_is_cert(key)) {
-		fp = key_selected_fingerprint(key->cert->signature_key, SSH_FP_HEX);
-		auth_info(authctxt, "%s ID %s (serial %llu) CA %s %s%s%s", 
-		    key_type(key), key->cert->key_id,
-		    (unsigned long long)key->cert->serial,
-		    key_type(key->cert->signature_key), fp,
-		    extra == NULL ? "" : ", ", extra == NULL ? "" : extra);
-		free(fp);
-	} else {
-		fp = key_selected_fingerprint(key, SSH_FP_HEX);
-		auth_info(authctxt, "%s %s%s%s", key_type(key), fp,
-		    extra == NULL ? "" : ", ", extra == NULL ? "" : extra);
-		free(fp);
-	}
+	pubkey = pubkey_format(key);
+	auth_info(authctxt, "%s%s%s", pubkey, extra == NULL ? "" : ", ",
+	    extra == NULL ? "" : extra);
+
 	free(extra);
 }
 
-- 
2.9.0

