From 80cb2d62621078c18e78a5eaa5d8aefeeba0e041 Mon Sep 17 00:00:00 2001
From: Vincent Brillault <vincent.brillault@cern.ch>
Date: Tue, 1 Dec 2015 15:13:49 +0100
Subject: [PATCH 4/8] Extract pubkey_format from pubkey_auth_info

---
 auth.h         |  1 +
 auth2-pubkey.c | 27 +++++++++++++++++++--------
 2 files changed, 20 insertions(+), 8 deletions(-)

diff --git a/auth.h b/auth.h
index 1d7ea6b..53fa20e 100644
--- a/auth.h
+++ b/auth.h
@@ -127,6 +127,7 @@ int	 auth_rsa_key_allowed(struct passwd *, BIGNUM *, Key **);
 int	 auth_rhosts_rsa_key_allowed(struct passwd *, char *, char *, Key *);
 int	 hostbased_key_allowed(struct passwd *, const char *, char *, Key *);
 int	 user_key_allowed(struct passwd *, Key *);
+char	*pubkey_format(const Key *key);
 void	 pubkey_auth_info(Authctxt *, const Key *, const char *, ...)
 	    __attribute__((__format__ (printf, 3, 4)));
 
diff --git a/auth2-pubkey.c b/auth2-pubkey.c
index 3808ec8..a639fe5 100644
--- a/auth2-pubkey.c
+++ b/auth2-pubkey.c
@@ -200,7 +200,7 @@ done:
 void
 pubkey_auth_info(Authctxt *authctxt, const Key *key, const char *fmt, ...)
 {
-	char *fp, *extra;
+	char *pubkey, *extra;
 	va_list ap;
 	int i;
 
@@ -210,24 +210,35 @@ pubkey_auth_info(Authctxt *authctxt, const Key *key, const char *fmt, ...)
 		i = vasprintf(&extra, fmt, ap);
 		va_end(ap);
 		if (i < 0 || extra == NULL)
-			fatal("%s: vasprintf failed", __func__);	
+			fatal("%s: vasprintf failed", __func__);
 	}
 
+	pubkey = pubkey_format(key);
+	auth_info(authctxt, "%s%s%s", pubkey, extra == NULL ? "" : ", ",
+	    extra == NULL ? "" : extra);
+	free(pubkey);
+	free(extra);
+}
+
+char *
+pubkey_format(const Key *key)
+{
+	char *fp, *result;
+
 	if (key_is_cert(key)) {
 		fp = key_selected_fingerprint(key->cert->signature_key, SSH_FP_HEX);
-		auth_info(authctxt, "%s ID %s (serial %llu) CA %s %s%s%s", 
+		xasprintf(&result, "%s ID %s (serial %llu) CA %s %s",
 		    key_type(key), key->cert->key_id,
 		    (unsigned long long)key->cert->serial,
-		    key_type(key->cert->signature_key), fp,
-		    extra == NULL ? "" : ", ", extra == NULL ? "" : extra);
+		    key_type(key->cert->signature_key), fp);
 		free(fp);
 	} else {
 		fp = key_selected_fingerprint(key, SSH_FP_HEX);
-		auth_info(authctxt, "%s %s%s%s", key_type(key), fp,
-		    extra == NULL ? "" : ", ", extra == NULL ? "" : extra);
+		xasprintf(&result, "%s %s", key_type(key), fp);
 		free(fp);
 	}
-	free(extra);
+
+	return result;
 }
 
 int
-- 
1.8.3.1

